from mrjob.job import MRJob
import re
from mrjob.job import MRStep


WORD_REGEXP = re.compile(r"[\w']+")

class MRWordFrequencyCount(MRJob):
    
    
    def steps(self):
        return[
        MRStep(mapper = self.mapper_first, reducer = self.reducer_first),
        MRStep(mapper = self.new_mapper, reducer = self.new_reducer)]
        
    
    def mapper_first(self,_,line):
        words = WORD_REGEXP.findall(line)
        for word in words:
            word = unicode(word, "utf-8", errors="ignore")
            yield word.lower(), 1
            
    def reducer_first(self, word,count):
        yield word, sum(count)
        
    def new_mapper(self,key,count):
        yield '%04d'%int(count), key
        
        
    def new_reducer(self, value, words):
        for word in words:
            yield value, word

if __name__ == '__main__':
    MRWordFrequencyCount.run()
        
        
        
        
